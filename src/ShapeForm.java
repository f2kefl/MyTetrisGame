/*  *  Таблица координат. Представляет собой набросок площади, каждый квадрат которой равен ячейке в таблице с соответсвующими ему координатами.
    *
    * -1;-1 | 0;-1 | 1;-1 | 2;-1 | 3;-1|
    * ---------------------------------
    * -1;0  | 0;0  | 1;0  | 2;0  | 3;0 |
    * ---------------------------------
    * -1;1  | 0;1  | 1;1  | 2;1  | 3;1 |
    * ---------------------------------
    * -1;2  | 0;2  | 1;2  | 2;2  | 3;2 |
    * ---------------------------------
    * -1;3  | 0;3  | 1;3  | 2;3  | 3;3 |
    */
/*
Перечисление всех возможных в игре форм фигур (они были определены в ТЗ).
Форма фигуры по задуманной механике представляет собой двумерный массив координат, в которые программа вставит заполненный квадрат.
Каждый элемент массива — координаты по осям Х и Y.
Пустая фигура — набор "нулевых" координат, фактически, это означает для программы, что в этой точке нет фигуры.
Пустая фигура нужна для проверки, находится ли что-то в этом квадрате. Наличие пустой фигуры говорит о том, что он пустой.
 */

public enum ShapeForm
{
    EmptyShape(new int[][] { { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 } }),
    IShape(new int[][] { { 0, -1 }, { 0, 0 }, { 0, 1 }, { 0, 2 }, { 0, 3 }, { 0, 0 } }),
    CShape(new int[][] { { 0, -1 }, { 1, -1 }, { 2, -1 }, { 0, 0 }, { 2, 0 }, { 0, 0 } }),
    TShape(new int[][] { { 1, -1 }, { 0, 0 }, { 1, 0 }, { 2, 0 }, { 0, 0 }, { 0, 0 } }),
    LShape(new int[][] { { 0, -1 }, { 1, -1 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 } }),
    SShape(new int[][] { { 0, -1 }, { 0, 0 }, { 1, 0 }, { 1, 1 }, { 0, 0 }, { 0, 0 } }),
    OShape(new int[][] { { 0, -1 }, { 1, -1 }, { 0, 0 }, { 1, 0 }, { 0, 1 }, { 1, 1 } }),
    tShape(new int[][] { { 0, -1 }, { 0, 0 }, { 1, 0 }, { 0, 1 }, { 0, 2 }, { 0, 0 } });

    int[][] coordinates;

    ShapeForm(int[][] coordinates) { // конструктор, позволяет получать при обращении к перечислению нужный набор координат
        this.coordinates = coordinates;
    }
}